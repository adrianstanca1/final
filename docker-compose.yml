services:
  # Agent Coordinator - Central coordination service
  coordinator:
    build:
      context: .
      target: coordinator
      dockerfile: Dockerfile
    ports:
      - "3100:3000"
    environment:
      - NODE_ENV=development
      - AGENT_ROLE=coordinator
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./services:/app/services:ro
      - ./types.ts:/app/types.ts:ro
      - agent-shared:/app/shared
    depends_on:
      - redis
    restart: unless-stopped

  # Primary Agent - Main development agent
  agent-primary:
    build:
      context: .
      target: agent
      dockerfile: Dockerfile
    ports:
      - "3101:3000"
    environment:
      - NODE_ENV=development
      - AGENT_ROLE=primary
      - AGENT_ID=agent-primary-001
      - COORDINATOR_URL=http://coordinator:3000
    volumes:
      - .:/app:cached
      - /app/node_modules
      - agent-shared:/app/shared
    depends_on:
      - coordinator
    restart: unless-stopped

  # Frontend Specialist Agent
  agent-frontend:
    build:
      context: .
      target: agent
      dockerfile: Dockerfile
    ports:
      - "3102:3000"
    environment:
      - NODE_ENV=development
      - AGENT_ROLE=specialist
      - AGENT_ID=agent-frontend-001
      - AGENT_SPECIALTY=frontend
      - COORDINATOR_URL=http://coordinator:3000
    volumes:
      - ./components:/app/components:cached
      - ./hooks:/app/hooks:cached
      - ./utils:/app/utils:cached
      - ./types.ts:/app/types.ts:cached
      - agent-shared:/app/shared
    depends_on:
      - coordinator
    restart: unless-stopped

  # Backend Specialist Agent  
  agent-backend:
    build:
      context: .
      target: agent
      dockerfile: Dockerfile
    ports:
      - "3103:3000"
    environment:
      - NODE_ENV=development
      - AGENT_ROLE=specialist
      - AGENT_ID=agent-backend-001
      - AGENT_SPECIALTY=backend
      - COORDINATOR_URL=http://coordinator:3000
    volumes:
      - ./services:/app/services:cached
      - ./backend:/app/backend:cached
      - ./api:/app/api:cached
      - ./types.ts:/app/types.ts:cached
      - agent-shared:/app/shared
    depends_on:
      - coordinator
    restart: unless-stopped

  # Deployment Agent
  agent-deployment:
    build:
      context: .
      target: agent
      dockerfile: Dockerfile
    ports:
      - "3104:3000"
    environment:
      - NODE_ENV=development
      - AGENT_ROLE=specialist
      - AGENT_ID=agent-deployment-001
      - AGENT_SPECIALTY=deployment
      - COORDINATOR_URL=http://coordinator:3000
    volumes:
      - ./scripts:/app/scripts:cached
      - ./deploy.config.js:/app/deploy.config.js:cached
      - ./Dockerfile:/app/Dockerfile:cached
      - ./docker-compose.yml:/app/docker-compose.yml:ro
      - agent-shared:/app/shared
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - coordinator
    restart: unless-stopped

  # Review Agent - Quality assurance and conflict resolution
  agent-reviewer:
    build:
      context: .
      target: agent
      dockerfile: Dockerfile
    ports:
      - "3105:3000"
    environment:
      - NODE_ENV=development
      - AGENT_ROLE=reviewer
      - AGENT_ID=agent-reviewer-001
      - COORDINATOR_URL=http://coordinator:3000
    volumes:
      - .:/app:ro
      - agent-shared:/app/shared
    depends_on:
      - coordinator
    restart: unless-stopped

  # Production Application
  app:
    build:
      context: .
      target: production
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    profiles:
      - production

  # Redis for agent coordination
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped

  # Monitoring and logging
  monitoring:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    profiles:
      - monitoring
    restart: unless-stopped

volumes:
  agent-shared:
    driver: local
  redis-data:
    driver: local

networks:
  default:
    name: multi-agent-network
    driver: bridge