extend type List {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "List", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `List`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID! @fdc_generated(from: "List.user", purpose: IMPLICIT_REF_FIELD)
}
extend type ListMovie {
  """
  ✨ Implicit foreign key field based on `ListMovie`.`list`. It must match the value of `List`.`id`. See `@ref` for how to customize it.
  """
  listId: UUID! @fdc_generated(from: "ListMovie.list", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `ListMovie`.`movie`. It must match the value of `Movie`.`id`. See `@ref` for how to customize it.
  """
  movieId: UUID! @fdc_generated(from: "ListMovie.movie", purpose: IMPLICIT_REF_FIELD)
}
extend type Movie {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Movie", purpose: IMPLICIT_KEY_FIELD)
}
extend type Review {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Review", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `Review`.`movie`. It must match the value of `Movie`.`id`. See `@ref` for how to customize it.
  """
  movieId: UUID! @fdc_generated(from: "Review.movie", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `Review`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID! @fdc_generated(from: "Review.user", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `Review`.`watch`. It must match the value of `Watch`.`id`. See `@ref` for how to customize it.
  """
  watchId: UUID @fdc_generated(from: "Review.watch", purpose: IMPLICIT_REF_FIELD)
}
extend type User {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "User", purpose: IMPLICIT_KEY_FIELD)
}
extend type Watch {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Watch", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `Watch`.`movie`. It must match the value of `Movie`.`id`. See `@ref` for how to customize it.
  """
  movieId: UUID! @fdc_generated(from: "Watch.movie", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `Watch`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID! @fdc_generated(from: "Watch.user", purpose: IMPLICIT_REF_FIELD)
}
